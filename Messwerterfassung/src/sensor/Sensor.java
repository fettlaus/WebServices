
package sensor;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "Sensor", targetNamespace = "http://sensor/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Sensor {


    /**
     * 
     * @param list
     * @param version
     */
    @WebMethod(action = "http://sensor/getDatabase")
    public void getDatabase(
        @WebParam(name = "list", mode = WebParam.Mode.OUT, partName = "list")
        Holder<SensorList> list,
        @WebParam(name = "version", mode = WebParam.Mode.OUT, partName = "version")
        Holder<Long> version);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/election")
    @WebResult(name = "success", partName = "success")
    public boolean election();

    /**
     * 
     * @param sensor
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/addSensor")
    @WebResult(name = "success", partName = "success")
    public boolean addSensor(
        @WebParam(name = "sensor", partName = "sensor")
        SensorObj sensor);

    /**
     * 
     * @param coordinator
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/setCoordinator")
    @WebResult(name = "success", partName = "success")
    public boolean setCoordinator(
        @WebParam(name = "coordinator", partName = "coordinator")
        SensorObj coordinator);

    /**
     * 
     * @param version
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/ping")
    @WebResult(name = "success", partName = "success")
    public boolean ping(
        @WebParam(name = "version", partName = "version")
        long version);

    /**
     * 
     * @return
     *     returns sensor.SensorObj
     */
    @WebMethod(action = "http://sensor/getCoordinator")
    @WebResult(name = "coordinator", partName = "coordinator")
    public SensorObj getCoordinator();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://sensor/getDisplay")
    @WebResult(name = "display", partName = "display")
    public String getDisplay();

    /**
     * 
     * @param direction
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/setDisplay")
    @WebResult(name = "success", partName = "success")
    public boolean setDisplay(
        @WebParam(name = "direction", partName = "direction")
        Directions direction);

    /**
     * 
     * @param sensor
     * @param version
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/addDatabase")
    @WebResult(name = "success", partName = "success")
    public boolean addDatabase(
        @WebParam(name = "sensor", partName = "sensor")
        SensorObj sensor,
        @WebParam(name = "version", partName = "version")
        long version);

    /**
     * 
     * @param sensor
     * @param version
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/removeDatabase")
    @WebResult(name = "success", partName = "success")
    public boolean removeDatabase(
        @WebParam(name = "sensor", partName = "sensor")
        SensorObj sensor,
        @WebParam(name = "version", partName = "version")
        long version);

    /**
     * 
     * @param sensor
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://sensor/removeSensor")
    @WebResult(name = "success", partName = "success")
    public boolean removeSensor(
        @WebParam(name = "sensor", partName = "sensor")
        SensorObj sensor);

}
